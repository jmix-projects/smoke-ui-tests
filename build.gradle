plugins {
    id 'io.jmix' version '1.1.0-RC1'
    id 'java'
    id 'groovy'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.1.999-SNAPSHOT'
    projectId = 'sales'
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral() 
    maven {
        url 'https://nexus.jmix.io/repository/public'
    }
    maven {
        url 'https://nexus.jmix.io/repository/premium'
        credentials {
            username rootProject['premiumRepoUser']
            password rootProject['premiumRepoPass']
        }
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.rest:jmix-rest-starter'
    implementation 'io.jmix.security:jmix-security-oauth2-starter'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-ui-starter'
    implementation 'io.jmix.dashboards:jmix-dashboards-starter'
    implementation 'io.jmix.dashboards:jmix-dashboards-ui-starter'
    themes 'io.jmix.dashboards:jmix-dashboards-ui'

    implementation 'io.jmix.reports:jmix-reports-starter'
    implementation 'io.jmix.reports:jmix-reports-ui-starter'
    implementation 'io.jmix.reports:jmix-reports-rest-starter'
    implementation 'io.jmix.emailtemplates:jmix-emailtemplates-starter'
    implementation 'io.jmix.emailtemplates:jmix-emailtemplates-ui-starter'
    implementation "io.jmix.ldap:jmix-ldap-starter"


    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.hsqldb:hsqldb'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    widgets "io.jmix.ui:jmix-ui-widgets"
    widgets "io.jmix.ui:jmix-charts-widgets"
    implementation "io.jmix.ui:jmix-charts-starter"
    themes "io.jmix.ui:jmix-ui-themes"
    implementation "io.jmix.ui:jmix-ui-themes"
    widgets "io.jmix.ui:jmix-pivot-table-widgets"
    implementation "io.jmix.ui:jmix-pivot-table-starter"
    implementation "io.jmix.maps:jmix-maps-ui-starter"
    widgets "io.jmix.maps:jmix-maps-ui-widgets"
    implementation "io.jmix.maps:jmix-maps-starter"
    implementation "io.jmix.ui:jmix-ui-export-starter"
    implementation "io.jmix.bpm:jmix-bpm-starter"
    implementation "io.jmix.bpm:jmix-bpm-ui-starter"
    implementation "io.jmix.dynattr:jmix-dynattr-starter"
    implementation "io.jmix.dynattr:jmix-dynattr-ui-starter"
    implementation 'io.jmix.search:jmix-search-starter'
    implementation 'io.jmix.search:jmix-search-ui-starter'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    widgets "io.jmix.ui:jmix-charts-widgets"
    widgets "io.jmix.ui:jmix-ui-widgets"
    implementation "io.jmix.ui:jmix-charts-starter"
    implementation "io.jmix.ui:jmix-pivot-table-starter"
    widgets "io.jmix.ui:jmix-pivot-table-widgets"
    implementation "io.jmix.audit:jmix-audit-starter"
    implementation "io.jmix.audit:jmix-audit-ui-starter"
    implementation 'io.jmix.sessions:jmix-sessions-starter'
    implementation "io.jmix.translations:jmix-translations-ru"
    implementation "io.jmix.grapesjs:jmix-grapesjs-starter"
    implementation "io.jmix.email:jmix-email-starter"
    implementation "io.jmix.email:jmix-email-ui-starter"
    implementation "io.jmix.imap:jmix-imap-ui-starter"
    implementation "io.jmix.imap:jmix-imap-starter"
    implementation "io.jmix.multitenancy:jmix-multitenancy-ui-starter"
    implementation "io.jmix.multitenancy:jmix-multitenancy-starter"

    implementation('org.jsoup:jsoup') {
        version {
            strictly '1.11.2'
        }
    }
    testImplementation "io.jmix.masquerade:jmix-masquerade:1.0.0-SNAPSHOT"

    testImplementation 'com.codeborne:selenide:5.20.1'
    testImplementation 'org.codehaus.groovy:groovy:3.0.7'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'

    testImplementation 'org.testcontainers:selenium:1.15.2'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.2'
    testImplementation 'org.testcontainers:postgresql:1.15.2'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testRuntimeOnly 'org.postgresql:postgresql:42.2.19'
}

    task testUi(type: Test) {
        useJUnitPlatform()

        filter {
            includeTestsMatching "io.jmix.tests.ui.*"
        }

        if (rootProject.hasProperty('jmix.tests.ui.baseHost')) {
            systemProperty 'jmix.tests.ui.baseHost', rootProject['jmix.tests.ui.baseHost']
        } else {
            systemProperty 'jmix.tests.ui.baseHost', 'http://host.docker.internal'
        }

        if (rootProject.hasProperty('selenide.browser')) {
            systemProperty 'selenide.browser', rootProject['selenide.browser']
        }

        if (rootProject.hasProperty('webdriver.chrome.driver')) {
            systemProperty 'webdriver.chrome.driver', rootProject['webdriver.chrome.driver']
        }

        if (rootProject.hasProperty('webdriver.gecko.driver')) {
            systemProperty 'webdriver.gecko.driver', rootProject['webdriver.gecko.driver']
        }

        def envProperties = rootProject.getProperties()
        for (def entry in envProperties.entrySet()) {
            if (String.valueOf(entry.key).startsWith('selenide.')) {
                systemProperty(String.valueOf(entry.key), entry.value)
            }
        }
    }

    test.dependsOn testUi
compileWidgets {
    generate "com.company.samplesales.widgets.CustomWidgetSet"
}